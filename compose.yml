version: '3.7'


services:
    # MySQL database
    mysql:
        restart: always
        image: mysql/mysql-server@sha256:5b40d96b11333570143d98d3a74100fefadb9abb17b27a95dbc9ad33544ec142
        container_name: mlflow_db
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
            - ${MLOPS_ROOT}/mysql:/var/lib/mysql

    # MinIO server
    minio:
        image: minio/minio
        expose:
           - "9000"
        ports:
            - "9000:9000"
            # MinIO Console is available at http://localhost:9001
            - "9001:9001"
        environment:
            MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
            MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
        healthcheck:
            test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
            interval: 1s
            timeout: 10s
            retries: 5
        command: server /data --console-address ":9001"
        volumes:
            - ${MLOPS_ROOT}/minio:/data

    # Create a bucket named "bucket" if it doesn't exist
    minio-create-bucket:
        image: minio/mc
        depends_on:
            minio:
                condition: service_healthy
        environment:
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        entrypoint: >
            bash -c "
            mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
            if ! mc ls minio | grep --quiet bucket; then
              mc mb minio/bucket
            else
              echo 'bucket already exists'
            fi
            "

    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        depends_on:
            - minio
            - minio-create-bucket
            - mysql
        ports:
            - "5000:5000"
        environment:
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MLFLOW_S3_ENDPOINT_URL: http://minio:9000
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE} --artifacts-destination s3://bucket --host 0.0.0.0 --port 5000
